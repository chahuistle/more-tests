# Build script for Travis CI
#

# non-sudo hosts are faster, according to Travis CI documentation
sudo: false
language: java
jdk: openjdk8

# speed up builds by caching maven local repository
cache:
  directories:
  - "$HOME/.m2/repository"

# as agreed in our SOP
branches:
  only:
  - master
  - development

# added to make logs look cleaner, crisper, certified fresh
before_install: unset _JAVA_OPTIONS 

# speed up builds by telling Travis that we don't need any special "installation"
install: true

# as agreed in our SOP, build everything (don't deploy, just try to 'mvn install' locally, which covers all phases)
script: mvn --quiet --activate-profiles !development-build,!release-build --settings .travis.settings.xml clean cobertura:cobertura install
# upload code coverage report, generate maven site (javadocs, documentation, static code analysis, etc.)
#after_success: 
#- bash <(curl -s https://codecov.io/bash)
#- mvn --quiet --activate-profiles !development-build,!release-build --settings .travis.settings.xml site

# unencrypt file with sensitive information only if needed
before_deploy: source ./.travis.decrypt.sh /tmp/travis_rsa

# deployments ALWAYS succeed, at least for Travis, this makes after_deploy ALWAYS being executed
# this is a hack, yeah and we should probably look in the forums/issues and then prepare a
# simple test case if it hasn't been reported
deploy:
  # as agreed in our SOP, builds on development branch will deploy to our maven repository after validating
  # the artifact has a proper SNAPSHOT version
  # artifact will be installed in our testing instance if it is a .war file
- skip_cleanup: true
  provider: script
  script: ( mvn --quiet --activate-profiles development-build,!release-build --settings .travis.settings.xml deploy &&
          find target/ -name *.war -exec rsync -e "ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /tmp/travis_rsa" {} $TESTING_USERNAME@$TESTING_SERVER:~/liferay*/deploy \; ) ||
          true
  on:
    branch: development
    condition: '"$TRAVIS_EVENT_TYPE" = "push"'
  # as agreed in our SOP, tagging a commit on the master branch will upload to our maven repository
  # after validating the artifact has a proper release version
  # artifact will be installed in our testing instance if it is a .war file
- skip_cleanup: true
  provider: script
  script: ( mvn --quiet --activate-profiles !development-build,release-build --settings .travis.settings.xml deploy && 
          find target/ -name *.war -exec rsync -e "ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /tmp/travis_rsa" {} $TESTING_USERNAME@$TESTING_SERVER:~/liferay*/deploy \; ) ||
          true
  on:
    branch: master
    tags: true

# always delete sensitive information
# in case the key was extracted and deployment fails, neither after_script nor after_deploy will be invoked, apparently
after_deploy: rm -f /tmp/travis_rsa

# change according to your needs, but we recommend to deactivate email notifications
# for now, we configured Travis to send a notification to the #travis-ci channel 
notifications:
  email:
    on_success: never
    on_failure: never
  slack: 
    on_success: never
    on_failure: always
    # edit the following section if you want to get slack notifications
    rooms:
      - secure: "KbCA/3Joqv98COAd19zk7hthc7XMPrniow/d1M9siGrEhTvdqnG/UiOT84B9MDzT3phXaz0OwvdkS62nYcDHJi7e5nt8e36st33cYbV/VxSTCMAXevPeQdkm6CeRltnrL2R4OMb9ONpLvCeGxPgIqt7M9qbHfqQOVJ+S1euQM8xyfhr6OcLqmovzyvgdDrvqkn+0wABc+p7nWmqsfXrojFcoxbbuUoBp7Fn9X+Ac8IzEhgKT2QJoxBd3jAGIJA0WzgW7jDZ568b9eG0Ike4s17cepsVQTgrO7/+VSYSH7+F5fGBTPrT81i0Nb759Zm1tSBtw4jR8mm/0IYfqIYWPyLy80ABuqeEzRh/DYiP4wWekBHt5nGg9ft2V5cIVgV+YRVOzSsFjSmTZ4UTJsIntjj/03pEiJ0diEQu0twV1ivhzbgGO50GtFHwHbGc0YjbI8bZlDdFjnSPSaGo18jt8uBgiWO2N/9Mxja57UTgxidUQgWatiN/VZwFrDQE242jr9/hAF4Lnx4ZhG/84PfqLo3fyY+hIZUe2p3QMRgqbv3r/jAMU2+NrvJu056ISWIEYsJbOSFtsucJqQltBsqrS1ej8dTqSnQHuZ6dgTj7vmXhjhOYwQe/n8rLx/w5ZsmFTA+xNXCrBdX8sKMy2fUJl6Grc2MjcU6SkBYAKXFDqQ5s="
